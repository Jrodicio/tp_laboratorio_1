#include <stdlib.h>
#include <string.h>
#include "Employee.h"


Employee* employee_new()
{
	/*Crea y retorna pEmployee sin datos.*/

	Employee* pEmployee;

	pEmployee = (Employee*) malloc(sizeof(Employee));

	return pEmployee;
}

Employee* employee_newParametros(char* idStr,char* nombreStr,char* horasTrabajadasStr,char* sueldoStr)
{
	/*Crea pEmployee. Setea datos y retorna.*/

	Employee* pEmployee;
	pEmployee = employee_new();


	employee_setId(pEmployee,(int)*idStr);
	employee_setNombre(pEmployee,nombreStr);
	employee_setHorasTrabajadas(pEmployee,(int) *horasTrabajadasStr);
	employee_setSueldo(pEmployee, (int) *sueldoStr);

	return pEmployee;
}

/*Setters & Getters*/
int employee_setNombre(Employee* this,char* nombre)
{
	int retorno = 0;
	if(this != NULL && nombre != NULL && stringIsAlpha(nombre))
	{
		strcpy(this->nombre,nombre);
		retorno = 1;
	}
	return retorno;
}

int employee_getNombre(Employee* this,char* nombre)
{
	int retorno = 0;
	if(this != NULL && nombre != NULL)
	{
		strcpy(nombre,this->nombre);
		retorno = 1;
	}
	return retorno;
}

int employee_setSueldo(Employee* this,int sueldo)
{
	int retorno = 0;
	if(this != NULL && sueldo > 0)
	{
		this->sueldo = sueldo;
		retorno = 1;
	}
	return retorno;
}

int employee_getSueldo(Employee* this,int* sueldo)
{
	int retorno = 0;
	if(this != NULL && sueldo != NULL)
	{
		*sueldo = this->sueldo;
		retorno = 1;
	}
	return retorno;
}

int employee_setId(Employee* this,int id)
{
	int retorno = 0;
	if(this != NULL && id > 0)
	{
		this->id = id;
		retorno = 1;
	}
	return retorno;
}
int employee_getId(Employee* this,int* id)
{
	int retorno = 0;
	if(this != NULL && id != NULL)
	{
		*id = this->id;
		retorno = 1;
	}
	return retorno;
}

int employee_setHorasTrabajadas(Employee* this,int horasTrabajadas)
{
	int retorno = 0;
	if(this != NULL && horasTrabajadas >= 0)
	{
		this->horasTrabajadas = horasTrabajadas;
		retorno = 1;
	}
	return retorno;
}

int employee_getHorasTrabajadas(Employee* this,int* horasTrabajadas)
{
	int retorno = 0;
	if(this != NULL && horasTrabajadas != NULL)
	{
		*horasTrabajadas = this->horasTrabajadas;
		retorno = 1;
	}
	return retorno;
}

/*Compare two employee's*/
int employee_CompareByName(Employee* firstEmployee, Employee* secondEmployee)
{
	if (firstEmployee != NULL && secondEmployee != NULL)
    {
		return strcmp(firstEmployee->nombre, secondEmployee->nombre);
    }
}

int employee_CompareById(Employee* firstEmployee, Employee* secondEmployee)
{
	if (firstEmployee != NULL && secondEmployee != NULL)
	{
		return firstEmployee->id - secondEmployee->id;
	}
}
