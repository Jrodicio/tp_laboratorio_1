#include <stdio.h>
#include <stdlib.h>
#include "LinkedList.h"
#include "Controller.h"
#include "Employee.h"
#include "GetValues.h"
#include "Menu.h"

#define PATHCSV "data.csv"
#define PATHBIN "data.bin"
/****************************************************
    Menu:
     1. Cargar los datos de los empleados desde el archivo data.csv (modo texto).
     2. Cargar los datos de los empleados desde el archivo data.csv (modo binario).
     3. Alta de empleado
     4. Modificar datos de empleado
     5. Baja de empleado
     6. Listar empleados
     7. Ordenar empleados
     8. Guardar los datos de los empleados en el archivo data.csv (modo texto).
     9. Guardar los datos de los empleados en el archivo data.csv (modo binario).
    10. Salir
*****************************************************/



int main()
{

	int opcionIngresada;
    int auxRetornoFuncion;
    int salir = 0;
    LinkedList* listaEmpleados = ll_newLinkedList();
    char* opcionesMenu[128] =	{		"Cargar los datos de los empleados desde el archivo data.csv (modo texto)",
    									"Cargar los datos de los empleados desde el archivo data.bin (modo binario)",
										"Alta de empleado",
										"Modificar datos de empleado",
										"Baja de empleado",
										"Listar empleados",
										"Ordenar empleados",
										"Guardar los datos de los empleados en el archivo data.csv (modo texto)",
										"Guardar los datos de los empleados en el archivo data.bin (modo binario)",
										"Salir"
    							};
    system("clear");
    do{
    	system("clear");
    	opcionIngresada = inputMenuOption(opcionesMenu);

    	switch(opcionIngresada)
        {
    		case 1:
    			auxRetornoFuncion = controller_loadFromText(PATHCSV,listaEmpleados);

				switch(auxRetornoFuncion)
				{
					case -1:
						pausa("No se han cargado los datos del archivo");
					break;
					case 0:
						pausa("El archivo no posee empleados, no existe o no tiene permisos.");
					break;
					case 1:
						pausa("Se ha cargado la lista de empleados correctamente");
					break;
				}

				break;
            case 2:
            	auxRetornoFuncion = controller_loadFromBinary(PATHBIN,listaEmpleados);
            	switch(auxRetornoFuncion)
				{
					case -1:
						pausa("No se han cargado los datos del archivo");
					break;
					case 0:
						pausa("El archivo no posee empleados, no existe o no tiene permisos.");
					break;
					case 1:
						pausa("Se ha cargado la lista de empleados correctamente");
					break;
				}

            	break;
            case 3:
            	if(controller_addEmployee(listaEmpleados))
            	{
            		pausa("Empleado cargado con éxito");
            	}
            	else
            	{
            		pausa("Cancelando alta de empleado");
            	}

            	break;
            case 4:
            	controller_editEmployee(listaEmpleados);
            	break;
            case 5:
            	controller_removeEmployee(listaEmpleados);
            	break;
            case 6:
            	controller_ListEmployee(listaEmpleados);
				break;
            case 7:
            	controller_sortEmployee(listaEmpleados);
            	break;
            case 8:
            	controller_saveAsText(PATHCSV,listaEmpleados);
            	break;
            case 9:
            	controller_saveAsBinary(PATHBIN,listaEmpleados);
            	break;
            case 10:
            	if(msjConfirm("Se perderán todos los cambios no guardados, ¿esta seguro?"))
            	{
            		salir = 1;
            	}
            	break;
            default:
            	pausa("Opción incorrecta");
            	break;
        }

    }while(!salir);
    return 0;
}
